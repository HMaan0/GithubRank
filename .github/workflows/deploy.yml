name: Build and deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            Header=${{ secrets.Header }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            REDIS_HOST=${{secrets.REDIS_HOST}}
            REDIS_PORT=${{secrets.REDIS_PORT}}
          context: .
          file: ./dockerfile
          push: true
          tags: harsh0maan/github_backend:latest
        env:
          Header: ${{ secrets.Header }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_HOST: ${{secrets.REDIS_HOST}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}

      - name: Verify Pushed Image
        run: docker pull harsh0maan/github_backend:latest

      - name: Debug SSH Key Length
        run: |
          if [ -n "${{ secrets.SSH_KEY }}" ]; then
            echo "Key length: $(echo '${{ secrets.SSH_KEY }}' | wc -c)"
          else
            echo "SSH key is missing"
            exit 1
          fi

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > /dev/null && echo "Key is valid"

      - name: Deploy to Azure
        uses: appleboy/ssh-action@v0.1.2
        with:
          debug: true
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Stopping existing container..."
            sudo docker stop github_backend || true

            echo "Removing existing container..."
            sudo docker rm github_backend || true

            echo "Pulling the latest Docker image..."
            sudo docker pull harsh0maan/github_backend:latest

            echo "Starting new container..."
            sudo docker run -d --name github_backend --network my_network -p 3001:3001 harsh0maan/github_backend:latest
